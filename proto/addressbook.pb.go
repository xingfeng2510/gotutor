// Code generated by protoc-gen-go.
// source: addressbook.proto
// DO NOT EDIT!

/*
Package tutorial is a generated protocol buffer package.

It is generated from these files:
	addressbook.proto

It has these top-level messages:
	Person
	AddressBook
	HelloRequest
	HelloReply
*/
package tutorial

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Person_PhoneType int32

const (
	Person_MOBILE Person_PhoneType = 0
	Person_HOME   Person_PhoneType = 1
	Person_WORK   Person_PhoneType = 2
)

var Person_PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}
var Person_PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x Person_PhoneType) String() string {
	return proto.EnumName(Person_PhoneType_name, int32(x))
}
func (Person_PhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// [START messages]
type Person struct {
	Name   string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id     int32                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Email  string                `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phones []*Person_PhoneNumber `protobuf:"bytes,4,rep,name=phones" json:"phones,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetPhones() []*Person_PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

type Person_PhoneNumber struct {
	Number string           `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Type   Person_PhoneType `protobuf:"varint,2,opt,name=type,enum=tutorial.Person_PhoneType" json:"type,omitempty"`
}

func (m *Person_PhoneNumber) Reset()                    { *m = Person_PhoneNumber{} }
func (m *Person_PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*Person_PhoneNumber) ProtoMessage()               {}
func (*Person_PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// Our address book file is just one of these.
type AddressBook struct {
	People []*Person `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *AddressBook) Reset()                    { *m = AddressBook{} }
func (m *AddressBook) String() string            { return proto.CompactTextString(m) }
func (*AddressBook) ProtoMessage()               {}
func (*AddressBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddressBook) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

// The request message containing the user's name.
type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// The response message containing the greetings
type HelloReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Person)(nil), "tutorial.Person")
	proto.RegisterType((*Person_PhoneNumber)(nil), "tutorial.Person.PhoneNumber")
	proto.RegisterType((*AddressBook)(nil), "tutorial.AddressBook")
	proto.RegisterType((*HelloRequest)(nil), "tutorial.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "tutorial.HelloReply")
	proto.RegisterEnum("tutorial.Person_PhoneType", Person_PhoneType_name, Person_PhoneType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Greeter service

type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/tutorial.Greeter/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Greeter service

type GreeterServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GreeterServer).SayHello(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tutorial.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x51, 0x41, 0x4f, 0xf2, 0x40,
	0x10, 0xa5, 0x50, 0x0a, 0x0c, 0x5f, 0x48, 0xbf, 0x09, 0x21, 0x0d, 0xf1, 0x40, 0xf6, 0x60, 0x48,
	0x4c, 0x7a, 0x40, 0x13, 0x13, 0x6f, 0x92, 0x10, 0x31, 0x8a, 0x90, 0x55, 0xe3, 0x79, 0x09, 0x13,
	0x25, 0x6e, 0xbb, 0x75, 0xbb, 0x1c, 0xf8, 0xef, 0x1e, 0xdc, 0x2e, 0x45, 0x89, 0x72, 0x7b, 0xf3,
	0xf6, 0xf5, 0xbd, 0x99, 0x57, 0xf8, 0x2f, 0x56, 0x2b, 0x4d, 0x79, 0xbe, 0x54, 0xea, 0x3d, 0xce,
	0xb4, 0x32, 0x0a, 0x9b, 0x66, 0x63, 0x94, 0x5e, 0x0b, 0xc9, 0x3e, 0x3d, 0x08, 0x16, 0xa4, 0x73,
	0x95, 0x22, 0x82, 0x9f, 0x8a, 0x84, 0x22, 0x6f, 0xe0, 0x0d, 0x5b, 0xdc, 0x61, 0xec, 0x40, 0x75,
	0xbd, 0x8a, 0xaa, 0x96, 0xa9, 0x73, 0x8b, 0xb0, 0x0b, 0x75, 0x4a, 0xc4, 0x5a, 0x46, 0x35, 0x27,
	0xda, 0x0d, 0x78, 0x01, 0x41, 0xf6, 0xa6, 0x52, 0xca, 0x23, 0x7f, 0x50, 0x1b, 0xb6, 0x47, 0x27,
	0xf1, 0xde, 0x3f, 0xde, 0x79, 0xc7, 0x8b, 0xe2, 0xf9, 0x61, 0x93, 0x2c, 0x49, 0xf3, 0x52, 0xdb,
	0x7f, 0x86, 0xf6, 0x01, 0x8d, 0x3d, 0x08, 0x52, 0x87, 0xca, 0x05, 0xca, 0x09, 0x63, 0xf0, 0xcd,
	0x36, 0x23, 0xb7, 0x44, 0x67, 0xd4, 0x3f, 0x6e, 0xfd, 0x64, 0x15, 0xdc, 0xe9, 0xd8, 0x19, 0xb4,
	0xbe, 0x29, 0x04, 0x08, 0x66, 0xf3, 0xf1, 0xed, 0xfd, 0x24, 0xac, 0x60, 0x13, 0xfc, 0xe9, 0x7c,
	0x36, 0x09, 0xbd, 0x02, 0xbd, 0xcc, 0xf9, 0x5d, 0x58, 0x65, 0x97, 0xd0, 0xbe, 0xde, 0xb5, 0x33,
	0xb6, 0xed, 0xe0, 0xd0, 0x1e, 0x42, 0x2a, 0x93, 0x45, 0x09, 0xc5, 0x21, 0xe1, 0xef, 0x34, 0x5e,
	0xbe, 0x33, 0x06, 0xff, 0xa6, 0x24, 0xa5, 0xe2, 0xf4, 0xb1, 0xa1, 0xdc, 0x1c, 0x2b, 0x8f, 0x9d,
	0x02, 0x94, 0x9a, 0x4c, 0x6e, 0x31, 0x82, 0x46, 0x62, 0x73, 0xc4, 0xeb, 0x5e, 0xb4, 0x1f, 0x47,
	0x13, 0x68, 0xdc, 0x68, 0x22, 0x63, 0x8f, 0xbd, 0x82, 0xe6, 0xa3, 0xd8, 0xba, 0xaf, 0xb0, 0xf7,
	0x13, 0x7e, 0x18, 0xd5, 0xef, 0xfe, 0xe1, 0xad, 0x3d, 0xab, 0x2c, 0x03, 0xf7, 0x6f, 0xcf, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x05, 0xc3, 0xc0, 0xf0, 0x01, 0x00, 0x00,
}
